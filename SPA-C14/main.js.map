{"version":3,"sources":["./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/services/common.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/people/people.component.ts","./src/app/people/people.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {HttpHeaders, HttpClient} from \"@angular/common/http\";\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n  public headers = new HttpHeaders({\n    'Cache-Control': 'no-cache',\n    Pragma: 'no-cache',\n    Expires: 'Sat, 01 Jan 2000 00:00:00 GMT'\n    });\n\n    userCount$ = new BehaviorSubject<number>(0);\n    people = [];\n  constructor(private http: HttpClient) { }\n\n  getRandomPeople(){\n    let count = Math.floor(Math.random() * 16) + 5;\n    return this.http.get<any>(`https://randomuser.me/api/?results=${count}`, {\n      headers: this.headers\n    })\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'SPA-C14';\n}\n","<app-navbar></app-navbar>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\nimport { PeopleComponent } from './people/people.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {HttpClientModule} from '@angular/common/http';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatSelectModule} from '@angular/material/select';\nimport { FormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    AboutComponent,\n    PeopleComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatBadgeModule,\n    HttpClientModule,\n    MatTableModule,\n    MatSelectModule,\n    FormsModule,\n    FontAwesomeModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { CommonService } from './../services/common.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  userCount = 0;\n  constructor(private common: CommonService) { }\n\n  ngOnInit(): void {\n    this.common.userCount$.subscribe(data => {\n      this.userCount = data;\n    })\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      data-bs-toggle=\"collapse\"\n      data-bs-target=\"#navbarNav\"\n      aria-controls=\"navbarNav\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link active\"\n            aria-current=\"page\"\n            routerLink=\"home\"\n            routerLinkActive=\"active\"\n            >Home</a\n          >\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"about\" routerLinkActive=\"active\"\n            >About</a\n          >\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"people\" routerLinkActive=\"active\"\n            ><span matBadge=\"{{ userCount }}\" matBadgeOverlap=\"false\"\n              >People</span\n            ></a\n          >\n        </li>\n        <!-- <li class=\"nav-item\">\n          <a\n            class=\"nav-link disabled\"\n            href=\"#\"\n            tabindex=\"-1\"\n            aria-disabled=\"true\"\n            >Disabled</a\n          >\n        </li> -->\n      </ul>\n    </div>\n  </div>\n</nav>\n<router-outlet></router-outlet>\n","import { CommonService } from './../services/common.service';\nimport { Component, OnInit } from '@angular/core';\nimport * as _ from 'lodash';\nimport { faSortAlphaUp, faSortAlphaDown } from '@fortawesome/free-solid-svg-icons';\n// export interface PeriodicElement {\n//   name: string;\n//   position: number;\n//   weight: number;\n//   symbol: string;\n// }\n\nexport interface PeriodicElement {\n  firstName: string;\n  lastName: string;\n  gender: boolean;\n  country: string;\n  avatar: string;\n}\n\n// let ELEMENT_DATA: PeriodicElement[] = [\n\n// ];\n@Component({\n  selector: 'app-people',\n  templateUrl: './people.component.html',\n  styleUrls: ['./people.component.css']\n})\nexport class PeopleComponent implements OnInit {\n  displayedColumns: string[] = ['firstName', 'lastName', 'gender', 'country', 'avatar'];\n  // dataSource = ELEMENT_DATA;\n  allPeople = [];\n  people = [];\n  countries = [];\n  selectedCountry = '';\n  isSorted = false;\n  constructor(private common: CommonService) { }\n\n  ngOnInit(): void {\n    if(this.common.people.length === 0){\n      this.loadData();\n    }\n    else{\n      this.people = this.common.people;\n    }\n  }\n\n  private loadData(){\n    this.common.getRandomPeople().subscribe(data => {\n      this.common.people = _.orderBy(data.results, ['name.first'], ['desc']);\n      this.people = this.common.people;\n      this.allPeople = this.people;\n      this.people.forEach(person => {\n        if(!this.countries.includes(person.location.country)){\n          this.countries.push(person.location.country);\n        }\n      })\n      console.log('people', this.people);\n      console.log('countries', this.countries);\n      this.common.userCount$.next(this.people.length);\n    })\n  }\n\n  public onChange(){\n    this.people = this.allPeople.filter(person => {\n      if(person.location.country === this.selectedCountry)\n        return person.location.country;\n    })\n  }\n\n  sort(){\n    this.isSorted = !this.isSorted;\n    if(this.isSorted){\n      this.people = _.orderBy(this.people, ['name.first'], 'asc');\n    }\n    else{\n      this.people = _.orderBy(this.people, ['name.first'], 'desc');\n    }\n  }\n  faSortAlphaUp = faSortAlphaUp;\n  faSortAlphaDown = faSortAlphaDown;\n}\n","<mat-form-field appearance=\"fill\">\n  <mat-label>Country</mat-label>\n  <mat-select\n    name=\"country\"\n    [(ngModel)]=\"selectedCountry\"\n    (ngModelChange)=\"onChange()\"\n  >\n    <mat-option *ngFor=\"let country of countries\" [value]=\"country\">\n      {{ country }}\n    </mat-option>\n  </mat-select>\n</mat-form-field>\n\n<table mat-table [dataSource]=\"people\" class=\"mat-elevation-z8\">\n  <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"firstName\">\n    <th mat-header-cell *matHeaderCellDef>\n      <fa-icon [icon]=\"faSortAlphaUp\" (click)=\"sort()\"></fa-icon>First Name\n    </th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.name.first }}</td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"lastName\">\n    <th mat-header-cell *matHeaderCellDef>Last Name</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.name.last }}</td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"gender\">\n    <th mat-header-cell *matHeaderCellDef>Gender</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.gender }}</td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"country\">\n    <th mat-header-cell *matHeaderCellDef>Country</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.location.country }}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"avatar\">\n    <th mat-header-cell *matHeaderCellDef>Avatar</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <img src=\"{{ element.picture.thumbnail }}\" alt=\"\" />\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>\n","import { PeopleComponent } from './people/people.component';\nimport { AboutComponent } from './about/about.component';\nimport { HomeComponent } from './home/home.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {path: 'home', component: HomeComponent},\n  {path: 'about', component: AboutComponent},\n  {path: 'people', component: PeopleComponent},\n  {path: '', redirectTo: '/home', pathMatch: 'full'},\n  {path: '*', component: HomeComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}